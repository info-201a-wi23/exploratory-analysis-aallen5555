summary_info$some_max_value <- Final %>%
distinct() %>%
filter(!is.na(NumberOfBusiness)) %>%
mutate(NumberOfBusiness = as.numeric(NumberOfBusiness)) %>%
filter(NumberOfBusiness == max(NumberOfBusiness, na.rm = TRUE)) %>%
select(NumberOfBusiness)
View(summary_info)
summary_info <- list()
summary_info$num_observations <- nrow(Final)
summary_info$some_max_value <- Final %>%
filter(NumberOfBusiness == max(NumberOfBusiness, na.rm = T)) %>%
select(NumberOfBusiness)
summary_info$num_observations <- nrow(Final)
summary_info <- list()
summary_info$num_observations <- nrow(Final)
summary_info$some_max_value <- Final %>%
filter(NumberOfBusiness == max(NumberOfBusiness, na.rm = T)) %>%
select(NumberOfBusiness)
# Add most common ethnicity to list
summary_info$most_common_ethnicity <- Final %>%
group_by(State) %>%
summarize(most_common_ethnicity = names(which.max(table(Ethnicity))))
# Add most common ethnicity to list
summary_info$most_common_ethnicity <- Final %>%
group_by(State) %>%
summarize(most_common_ethnicity = names(which.max(table(Ethnicity))))
# Add most common ethnicity to list
summary_info$most_common_ethnicity <- Final %>%
group_by(State) %>%
summarize(most_common_ethnicity = names(which.max(table(MajorityEthnicity))))
View(summary_info)
# Add most common ethnicity to list
summary_info$majority_ethnicity_all_states <- Final %>%
count(Ethnicity) %>%
slice_max(n) %>%
pull(Ethnicity)
# Add most common ethnicity to list
summary_info$majority_ethnicity_all_states <- Final %>%
count(MajorityEthnicity) %>%
slice_max(n) %>%
pull(MajorityEthnicity)
View(summary_info)
# Add most common ethnicity to list
summary_info$majority_ethnicity_all_states <- Final %>%
count(MajorityEthnicity) %>%
slice_max(n) %>%
pull(MajorityEthnicity)
# Add percentage of WBE to list
summary_info$wbe_percentage <- Final %>%
group_by(State) %>%
summarize(wbe_percentage = sum(str_detect(certification,"WBE")) / n() * 100)
# Add percentage of WBE to list
summary_info$wbe_percentage <- Final %>%
summarize(wbe_percentage = sum(str_detect(certification, "WBE")) / n() * 100)
# Add percentage of WBE to list
summary_info$wbe_percentage <- Final %>%
summarize(wbe_percentage = sum(str_detect(WBE_count, "WBE")) / n() * 100)
# Add percentage of MBE to list
summary_info$mbe_percentage <- Final %>%
summarize(mbe_percentage = sum(str_detect(MBECount, "MBE")) / n() * 100)
# Add percentage of WBE to list
summary_info$wbe_percentage <- Final %>%
summarize(wbe_percentage = sum(str_detect(WBE_count, "WBE")) / n() * 100)
# Add percentage of MBE to list
summary_info$mbe_percentage <- Final %>%
summarize(mbe_percentage = sum(str_detect(MBECount, "MBE")) / n() * 100)
# Add most common certification in each state to list
summary_info$most_common_certification <- Final %>%
group_by(State) %>%
summarize(most_common_certification = names(which.max(table(certification))))
# Add percentage of WBE to list
summary_info$wbe_percentage <- Final %>%
summarize(wbe_percentage = sum(str_detect(WBE_count, "WBE")) / n() * 100)
# Add percentage of MBE to list
summary_info$mbe_percentage <- Final %>%
summarize(mbe_percentage = sum(str_detect(certification, "MBE")) / n() * 100) %>%
pull(mbe_percentage)
# Add most common zipcode to list
summary_info$most_common_zipcode <- Final %>%
group_by(State) %>%
summarize(most_common_zipcode = names(which.max(table(ZIP))))
# Add most common zipcode to list
summary_info$most_common_zipcode <- Final %>%
group_by(State) %>%
summarize(most_common_zipcode = names(which.max(table(ZipCodes))))
# Add most common zip code to list
summary_info$most_common_zipcode <- Final %>%
group_by(ZipCodes) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
slice(1) %>%
pull(ZipCodes)
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
View(most_common_zip)
zip_counts <- full_dataset %>%
group_by(ZIP) %>%
count()
View(ZipCodes)
zip_counts <- full_dataset %>%
group_by(ZIP) %>%
count()
View(zip_counts)
most_common_zip <- zip_counts %>%
slice_max(n, n = 1)
View(most_common_zip)
most_common_zip <- zip_counts %>%
slice_max(n, n = 1)
full_dataset_with_zip_counts <- full_dataset %>%
group_by(State, ZIP) %>%
summarize(zip_count = n()) %>%
ungroup() %>%
group_by(State) %>%
slice_max(zip_count) %>%
ungroup() %>%
select(State, ZIP, zip_count) %>%
right_join(full_dataset, by = c("State", "ZIP"))
View(full_dataset_with_zip_counts)
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
View(most_common_zip)
library("dplyr")
library("tidyverse")
library("stringr")
full_dataset <- read.csv("fulldataframe.csv")
WBE_count <- nrow(full_dataset[full_dataset$certification == "WBE", ])
Cities <- full_dataset %>% group_by(State) %>% summarise(Cities = paste(unique(na.omit(City)), collapse = ", "))
ZipCodes <- full_dataset %>% group_by(State) %>% summarise(ZipCodes = paste(unique(na.omit(ZIP)), collapse = ", "))
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
NumberOfBusiness <- full_dataset %>% group_by(State) %>% summarise(NumberOfBusiness = n())
PctMinority <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_pct = ((total_count - non_minority_count) / total_count) * 100)
Majority <- full_dataset %>% group_by(State) %>%
summarise(MajorityEthnicity = max(Ethnicity))
WBECount <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification, "WBE")))
WBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification,"WBE")),
total_count = n()) %>%
mutate(WBE_pct = (WBECount / total_count) * 100)
WBEPercentage <- WBEPercentage[, c("State", "WBE_pct")]
MBECount <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")))
MBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")),
total_count = n()) %>%
mutate(MBE_pct = (MBECount / total_count) * 100)
MBEPercentage <- MBEPercentage[, c("State", "MBE_pct")]
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
select(State, minority_pct)
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
library("dplyr")
library("tidyverse")
library("stringr")
full_dataset <- read.csv("fulldataframe.csv")
WBE_count <- nrow(full_dataset[full_dataset$certification == "WBE", ])
Cities <- full_dataset %>% group_by(State) %>% summarise(Cities = paste(unique(na.omit(City)), collapse = ", "))
ZipCodes <- full_dataset %>% group_by(State) %>% summarise(ZipCodes = paste(unique(na.omit(ZIP)), collapse = ", "))
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
NumberOfBusiness <- full_dataset %>% group_by(State) %>% summarise(NumberOfBusiness = n())
PctMinority <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_pct = ((total_count - non_minority_count) / total_count) * 100)
select(State, minority_pct)
PctMinority <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY") %>%
mutate(minority_pct = ((n() - non_minority_count) / n()) * 100))
library("dplyr")
library("tidyverse")
library("stringr")
full_dataset <- read.csv("fulldataframe.csv")
WBE_count <- nrow(full_dataset[full_dataset$certification == "WBE", ])
Cities <- full_dataset %>% group_by(State) %>% summarise(Cities = paste(unique(na.omit(City)), collapse = ", "))
ZipCodes <- full_dataset %>% group_by(State) %>% summarise(ZipCodes = paste(unique(na.omit(ZIP)), collapse = ", "))
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
NumberOfBusiness <- full_dataset %>% group_by(State) %>% summarise(NumberOfBusiness = n())
PctMinority <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_pct = ((total_count - non_minority_count) / total_count) * 100)
Majority <- full_dataset %>% group_by(State) %>%
summarise(MajorityEthnicity = max(Ethnicity))
WBECount <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification, "WBE")))
WBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification,"WBE")),
total_count = n()) %>%
mutate(WBE_pct = (WBECount / total_count) * 100)
WBEPercentage <- WBEPercentage[, c("State", "WBE_pct")]
MBECount <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")))
MBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")),
total_count = n()) %>%
mutate(MBE_pct = (MBECount / total_count) * 100)
MBEPercentage <- MBEPercentage[, c("State", "MBE_pct")]
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
PctMinority <- PctMinority[, c("State", "minority_pct")]
# make list
summary_info <- list()
# Number of States Observed
summary_info$num_States <- nrow(Final)
# Number of business observed
summary_info$TotalBusiness <- Final %>%
filter(NumberOfBusiness == max(NumberOfBusiness, na.rm = T)) %>%
select(NumberOfBusiness)
# Number of minority total
summary_info$TotalMinority <- Final %>%
filter(non_minority_count == max(non_minority_count, na.rm = T)) %>%
select(non_minority_count)
library("dplyr")
library("tidyverse")
library("stringr")
full_dataset <- read.csv("fulldataframe.csv")
WBE_count <- nrow(full_dataset[full_dataset$certification == "WBE", ])
Cities <- full_dataset %>% group_by(State) %>% summarise(Cities = paste(unique(na.omit(City)), collapse = ", "))
ZipCodes <- full_dataset %>% group_by(State) %>% summarise(ZipCodes = paste(unique(na.omit(ZIP)), collapse = ", "))
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
NumberOfBusiness <- full_dataset %>% group_by(State) %>% summarise(NumberOfBusiness = n())
PctMinority <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_pct = ((total_count - non_minority_count) / total_count) * 100)
PctMinority <- PctMinority[, c("State", "minority_pct")]
Majority <- full_dataset %>% group_by(State) %>%
summarise(MajorityEthnicity = max(Ethnicity))
WBECount <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification, "WBE")))
WBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification,"WBE")),
total_count = n()) %>%
mutate(WBE_pct = (WBECount / total_count) * 100)
WBEPercentage <- WBEPercentage[, c("State", "WBE_pct")]
MBECount <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")))
MBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")),
total_count = n()) %>%
mutate(MBE_pct = (MBECount / total_count) * 100)
MBEPercentage <- MBEPercentage[, c("State", "MBE_pct")]
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
Majority <- full_dataset %>%
group_by(State) %>%
summarize(MajorityEthnicity = names(which.max(table(Ethnicity))))
library("dplyr")
library("tidyverse")
library("stringr")
full_dataset <- read.csv("fulldataframe.csv")
WBE_count <- nrow(full_dataset[full_dataset$certification == "WBE", ])
Cities <- full_dataset %>% group_by(State) %>% summarise(Cities = paste(unique(na.omit(City)), collapse = ", "))
ZipCodes <- full_dataset %>% group_by(State) %>% summarise(ZipCodes = paste(unique(na.omit(ZIP)), collapse = ", "))
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
NumberOfBusiness <- full_dataset %>% group_by(State) %>% summarise(NumberOfBusiness = n())
PctMinority <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_pct = ((total_count - non_minority_count) / total_count) * 100)
PctMinority <- PctMinority[, c("State", "minority_pct")]
# Majority <- full_dataset %>% group_by(State) %>%
#   summarise(MajorityEthnicity = max(Ethnicity))
Majority <- full_dataset %>%
group_by(State) %>%
summarize(MajorityEthnicity = names(which.max(table(Ethnicity))))
WBECount <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification, "WBE")))
WBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification,"WBE")),
total_count = n()) %>%
mutate(WBE_pct = (WBECount / total_count) * 100)
WBEPercentage <- WBEPercentage[, c("State", "WBE_pct")]
MBECount <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")))
MBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")),
total_count = n()) %>%
mutate(MBE_pct = (MBECount / total_count) * 100)
MBEPercentage <- MBEPercentage[, c("State", "MBE_pct")]
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
# Most common dominant ethnicity
summary_info$dominantEthnicity <- Final %>%
filter(MajorityEthnicity == max(MajorityEthnicity, na.rm = T)) %>%
select(MajorityEthnicity)
# Most common MajorityEthnicity
summary_info$CommonEthnicity <- Final %>%
group_by(MajorityEthnicity) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
slice(1) %>%
select(MajorityEthnicity)
# Number of Women business owner based on certificaton
summary_info$WomenBusinessOwner <- Final %>%
filter(WBECount == max(WBECount, na.rm = T)) %>%
select(WBECount)
# Number of business observed
summary_info$TotalBusiness <- Final %>%
filter(NumberOfBusiness == sum(NumberOfBusiness, na.rm = T)) %>%
select(NumberOfBusiness)
# Number of business observed
summary_info$TotalBusiness <- sum(Final$NumberOfBusiness)
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(MinorityCount, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
MinorityCount <- full_dataset %>% group_by(State) %>%
total_count = n() %>%
minority_count = (total_count - non_minority_count)
MinorityCount <- full_dataset %>% group_by(State) %>%
total_count = n() %>%
minority_count = (total_count - non_minority_count)
MinorityCount <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
minority_count = (total_count - non_minority_count)
library("dplyr")
MinorityCount <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
minority_count = (total_count - non_minority_count)
MinorityCount <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_count = (total_count - non_minority_count))
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(MinorityCount, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
# Number of minority total
summary_info$TotalMinority <- sum(Final$minority_count)
# Most common Majority Ethnicity
summary_info$CommonEthnicity <- Final %>%
group_by(MajorityEthnicity) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
slice(1) %>%
select(MajorityEthnicity)
# Number of Women business owner based on certificaton
summary_info$WomenBusinessOwner <- Final %>%
filter(WBECount == max(WBECount, na.rm = T)) %>%
select(WBECount)
View(Final)
library("dplyr")
library("tidyverse")
library("stringr")
# read csv
full_dataset <- read.csv("fulldataframe.csv")
# make the cities collumn
Cities <- full_dataset %>% group_by(State) %>% summarise(Cities = paste(unique(na.omit(City)), collapse = ", "))
# make the zipcodes collumn
ZipCodes <- full_dataset %>% group_by(State) %>% summarise(ZipCodes = paste(unique(na.omit(ZIP)), collapse = ", "))
# Group data by state and find most common zip code
most_common_zip <- full_dataset %>%
group_by(State) %>%
summarize(most_common_zip = names(which.max(table(na.omit(ZIP))))) %>%
ungroup()
# find number of business
NumberOfBusiness <- full_dataset %>% group_by(State) %>% summarise(NumberOfBusiness = n())
# count the total minority
MinorityCount <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_count = (total_count - non_minority_count))
# count the percentage minority
PctMinority <- full_dataset %>% group_by(State) %>%
summarise(non_minority_count = sum(Ethnicity == "NON-MINORITY"),
total_count = n()) %>%
mutate(minority_pct = ((total_count - non_minority_count) / total_count) * 100)
PctMinority <- PctMinority[, c("State", "minority_pct")]
# find out which ethnicity is the majority
Majority <- full_dataset %>%
group_by(State) %>%
summarize(MajorityEthnicity = names(which.max(table(Ethnicity))))
# find the number of WBE owner
WBECount <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification, "WBE")))
# find the number of WBE percentage
WBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(WBECount = sum(str_detect(certification,"WBE")),
total_count = n()) %>%
mutate(WBE_pct = (WBECount / total_count) * 100)
WBEPercentage <- WBEPercentage[, c("State", "WBE_pct")]
# find the number of MBE owner
MBECount <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")))
# find the number of MBE percentage
MBEPercentage <- full_dataset %>% group_by(State) %>%
summarise(MBECount = sum(str_detect(certification, "MBE")),
total_count = n()) %>%
mutate(MBE_pct = (MBECount / total_count) * 100)
MBEPercentage <- MBEPercentage[, c("State", "MBE_pct")]
# add all to table
Final <- left_join(Cities, ZipCodes, PctMinority, by = "State") %>%
left_join(NumberOfBusiness, by = "State") %>%
left_join(most_common_zip, by = "State") %>%
left_join(MinorityCount, by = "State") %>%
left_join(PctMinority, by = "State") %>%
left_join(Majority, by = "State") %>%
left_join(WBECount, by = "State") %>%
left_join(WBEPercentage, by = "State") %>%
left_join(MBECount, by = "State") %>%
left_join(MBEPercentage, by = "State")
View(Final)
library("dplyr")
library("tidyverse")
library("stringr")
# make list
summary_info <- list()
# add Number of States Observed
summary_info$num_States <- nrow(Final)
# add Number of business observed
summary_info$TotalBusiness <- sum(Final$NumberOfBusiness)
# add Number of minority total
summary_info$TotalMinority <- sum(Final$minority_count)
# add Most common Majority Ethnicity
summary_info$CommonEthnicity <- Final %>%
group_by(MajorityEthnicity) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
slice(1) %>%
select(MajorityEthnicity)
# add Number of Women business owner based on certificaton
summary_info$WomenBusinessOwner <- Final %>%
filter(WBECount == max(WBECount, na.rm = T)) %>%
select(WBECount)
View(summary_info)
library("knitr")
kable(Final)
kable(Final)
install.packages("kableExtra")
library("dplyr")
library("kableExtra")
Final %>% kbl()
